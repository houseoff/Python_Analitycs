# Даны два массива чисел. Требуется вывести те элементы первого массива
# (в том порядке, в каком они идут в первом массиве) которых нет во втором массиве
# Пользователь вводит число N - количество элементов в первом массиве, затем N чисел - элементы массива
# Затем число M - количество элементов во втором массиве. Затем элементы второго массива
def input_number():
    while True:
        try:
            n = int(input())
            if n > 0: break
            print("Число должно быть строго больше нуля!")
        except:
            print("Вы ошиблись при вводе числа! Пожалуйста, повторите ввод")
    return n

def fill_list(len: int):
    lst = []
    for i in range(len):
        print(f'Введите {i + 1} число списка: ', end='')
        lst.append(input_number())
    return lst

def task39():
    print('Введите кол-во элементов первого списка: ', end='')
    n = input_number()
    print('Введите кол-во элементов второго списка: ', end='')
    m = input_number()
    print("Заполнение первого списка: ")
    lst1 = fill_list(n)
    print("Заполнение второго списка: ")
    lst2 = fill_list(m)
    print("Первый список:", lst1)
    print("Второй список:", lst2)
    print(f"Элементы первого списка, которых нет во втором: {list(filter(lambda x: x not in lst2, lst1))}")

# Дан массив, состоящий из целых чисел. Напишите программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при этом, оба соседних элемента меньше данного.
# Сначала вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив состоит из целых чисел
def task41():
    n = input_number()
    lst = fill_list(n)
    count = 0
    for i in range(1, len(lst) - 1):
        if lst[i - 1] < lst[i] > lst[i + 1]:
            count += 1
    print(lst)
    print(count)

# Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу.
# Считается, что любые два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список чисел. Все числа списка находятся на разных строках
def find_pair(lst: list):
    result = []
    for i in range(len(lst) - 1):
        for j in range(i + 1, len(lst)):
            if lst[i] == lst[j]:
                result.append([i , j])     
    return result

def task43():
    print('Введите кол-во элементов списка: ', end='')
    n = input_number()
    lst = fill_list(n)
    print(len(find_pair(lst)))

# Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k. 
# Программа получает на вход одно натуральное число k, не превосходящее 10^5.
# Программа должна вывести все пары дружественных чисел, каждое из которых не превосходит k.
# Пары необходимо выводить по одной в строке, разделяя пробелами.
# Каждая пара должна быть выведена только один раз (перестановка чисел новую пару не дает)
def sum_of_dividers(num):
    if num < 1: return 0
    summ = 1
    for i in range(2, num // 2 + 1):
        if num % i == 0:
            summ += i
    return summ

def task45():
    print('Введите число k:', end=' ')
    k = input_number()
    pairs = []
    for n in range(2, k):
        m = sum_of_dividers(n)
        sum_m = sum_of_dividers(m)
        if sum_m == n and n < m:
            pairs.append([n, m])
    for pair in pairs:
        print(pair)

task45()